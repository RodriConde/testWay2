name: ci
on: push

jobs:
  prepare: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-cypress
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-node-cypress
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

  test-random-order:
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-cypress
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-node-cypress

      - uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'  
          
      - name: Run random order Cypress E2E tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
            install: false
        env:
            SPEC: "./rodri-e2e/test-file/e2e/*.cy.js"
            SPLIT: ${{ strategy.job-total }}
            SPLIT_INDEX: ${{ strategy.job-index }}
            SPLIT_FILE: '${{ inputs.split-file }}'
            SKIP_SPEC: '${{ inputs.skip-spec }}'
            DEBUG: 'cypress-split'
            
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.store-artifacts && always() }}
        with:
          name: cypress-split-results-e2e-${{ strategy.job-index }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/results
            ${{ inputs.split-file }}
          if-no-files-found: ignore
            
  merge-reports:
    if: ${{ inputs.store-artifacts && inputs.marge && always() }}
    needs: [test-random-order]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4
      - name: Install dependencies ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          runTests: false
      - uses: actions/download-artifact@v4
        with:
          path: split-results
      - name: Display structure of downloaded files
        run: ls -R split-results
      - name: Prepare folder
        run: |
          mkdir mochawesome
          mkdir -p mochawesome/screenshots
          mkdir -p mochawesome/videos
          mkdir -p mochawesome/results
      - name: Copy all assets and JSON reports
        run: |
          cp -r split-results/cypress-split-results-*/cypress/screenshots/* mochawesome/screenshots || true
          cp -r split-results/cypress-split-results-*/cypress/videos/* mochawesome/videos || true
          cp -r split-results/cypress-split-results-*/cypress/results/* mochawesome/results || true
      - name: Show copied files
        run: ls -lR mochawesome

      - name: Merge Mochawesome JSON reports
        # assuming the merge tool is installed
        run: npx mochawesome-merge mochawesome/results/*.json -o mochawesome/results/merged.json
      - name: Generate Mochawesome HTML report
        # assuming the merge tool is installed
        run: |
          npx marge mochawesome/results/merged.json \
            --charts true --showHooks always \
            --reportDir mochawesome/results \
            --reportFilename index.html

      - uses: actions/upload-artifact@v4
        with:
          name: merged-mochawesome-report
          path: mochawesome
